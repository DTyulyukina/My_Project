!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/forms"),require("ng2-daterangepicker"),require("moment"),require("ngx-treeview"),require("@angular/common"),require("@ngx-translate/core"),require("angular-2-dropdown-multiselect")):"function"==typeof define&&define.amd?define(["exports","@angular/core","@angular/forms","ng2-daterangepicker","moment","ngx-treeview","@angular/common","@ngx-translate/core","angular-2-dropdown-multiselect"],t):t(e["angular-forms-utils"]={},e.ng.core,e.ng.forms,e.ng2Daterangepicker,e.moment_,e.ngxTreeview,e.ng.common,e.core$1,e.angular2DropdownMultiselect)}(this,function(e,t,i,n,r,o,l,s,a){"use strict";function d(e){var t="function"==typeof Symbol&&e[Symbol.iterator],i=0;return t?t.call(e):{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}}}var u=function(){function e(){this.fields=[],this.events=[],this.afterInit=new t.EventEmitter(!0),this.afterViewInit=new t.EventEmitter(!0)}return e.prototype.ngOnInit=function(){var e=this;this.fields.forEach(function(t){e.form.addControl(t.id,t.control)}),this.afterInit.next(!0)},e.prototype.ngAfterViewInit=function(){this.afterViewInit.next(!0)},e}();u.decorators=[{type:t.Component,args:[{selector:"tw-reactive-form",template:"\n<form [formGroup]=\"form\">\n  <div class=\"row\">\n    <div class=\"form-group col-{{field.col || 'sm-6'}}\" [ngClass]=\"field.class\" *ngFor=\"let field of fields\">\n      <label for=\"{{field.id}}\">{{field.label | translate}} <small *ngIf='field.info'>{{field.info | translate}}</small></label>\n      <tw-input-text *ngIf='field.type===\"text\" || field.type===\"number\" || field.type===\"hidden\" || field.type===\"email\" || field.type===\"password\"' [group]='form' [field]='field' [request]='request'></tw-input-text>\n      <tw-input-float *ngIf='field.type===\"float\"' [group]='form' [field]='field' [request]='request'></tw-input-float>\n      <tw-select *ngIf='field.type===\"select\"' [group]='form' [field]='field' [request]='request'></tw-select>\n      <tw-select-t *ngIf='field.type===\"selectT\"' [group]='form' [field]='field' [request]='request'></tw-select-t>\n      <tw-enumselect *ngIf='field.type===\"enumselect\" || field.type===\"enummultiselect\"' [group]='form' [field]='field' [request]='request'></tw-enumselect>\n      <tw-datetime-picker *ngIf='field.type===\"datetime\"' [group]='form' [field]='field' [request]='request'></tw-datetime-picker>\n      <tw-daterange-picker *ngIf='field.type===\"daterange\"' [group]='form' [field]='field' [request]='request'></tw-daterange-picker>\n      <tw-time-picker *ngIf='field.type===\"time\"' [group]='form' [field]='field' [request]='request'></tw-time-picker>\n      <tw-switch *ngIf='field.type===\"boolean\"' [group]='form' [field]='field' [request]='request'></tw-switch>\n      <tw-groupselect *ngIf='field.type===\"groupselect\"' [group]='form' [field]='field' [request]='request'></tw-groupselect>\n      <tw-multiselect *ngIf='field.type===\"multiselect\"' [group]='form' [field]='field' [request]='request'></tw-multiselect>\n      <tw-multiselectcb *ngIf='field.type===\"multiselectcb\"' [group]='form' [field]='field' [request]='request'></tw-multiselectcb>\n      <tw-textarea *ngIf='field.type===\"textarea\"' [group]='form' [field]='field' [request]='request'></tw-textarea>\n      <tw-date-picker *ngIf='field.type===\"date\"' [group]='form' [field]='field' [request]='request'></tw-date-picker>\n      <tw-dof *ngIf='field.type===\"daysOfWeek\"' [group]='form' [field]='field' [request]='request'></tw-dof>\n      <tw-treeview-txt *ngIf='field.type===\"treeview-txt\" || field.type===\"dropdown-treeview-txt\"' [group]='form' [field]='field' [request]='request'></tw-treeview-txt>\n      <tw-treeview-radio *ngIf='field.type===\"treeview-radio\" || field.type===\"dropdown-treeview-radio\"' [group]='form' [field]='field' [request]='request'></tw-treeview-radio>\n      <tw-treeview *ngIf='field.type===\"treeview\" || field.type===\"dropdown-treeview\"' [group]='form' [field]='field' [request]='request'></tw-treeview>\n    </div>\n  </div>\n</form>\n  "}]}],u.ctorParameters=function(){return[]},u.propDecorators={fields:[{type:t.Input}],form:[{type:t.Input}],request:[{type:t.Input}],afterInit:[{type:t.Output}],afterViewInit:[{type:t.Output}]};var p=function(){function e(e){Object.assign(this,e),this.control=new i.FormControl(""),this.valueChange=new t.EventEmitter}return e.prototype.required=function(){return this.control.setValidators(i.Validators.required),this},e.prototype.setValidators=function(e){return this.control.setValidators(e),this},e.prototype.setValue=function(e){return this.control.setValue(e),this.valueChange.next(e),this},e.prototype.addValidator=function(e){var t=[];return this.control.validator&&t.push(this.control.validator),t.push(e),this.control.setValidators(t),this},e}(),f=r,c=function(){function e(){this.daterange={},this.minute="",this.firstShow=!0}return e.prototype.selectedDate=function(e,t){e.start&&(this.field.more.dateOnly?this.request[this.field.id]=e.start.hours(12):this.request[this.field.id]=e.start,this.datepicker.nativeElement.value=e.start.format(this.field.more.dateFormat||"YYYY-MM-DD HH:mm")),this.field.control.setValue(this.datepicker.nativeElement.value)},e.prototype.showDaterangepicker=function(e){this.firstShow&&this.selectedDate({start:this.defaultValue}),this.firstShow=!1},e.prototype.ngOnInit=function(){var e=this;if(this.datepicker.nativeElement=this.datepicker.nativeElement,this.field.more)if(this.field.more.defaultValue)switch(this.field.more.defaultValue){case"startOfDay":this.defaultValue=f().startOf("day");break;case"endOfDay":this.defaultValue=f().endOf("day");break;default:this.defaultValue=this.field.more.defaultValue}else this.defaultValue=f();else this.field.more={};if(this.request[this.field.id]){var t=f(this.request[this.field.id]);this.defaultValue=t,this.field.control.setValue(t.format(this.field.more.dateFormat||"YYYY-MM-DD HH:mm"))}if(this.options={singleDatePicker:!0,timePicker:!this.field.more.dateOnly,autoApply:!0,timePicker24Hour:!0,autoUpdateInput:!1,startDate:this.defaultValue},this.field.more.options)for(var i in this.field.more.options)this.options[i]=this.field.more.options[i];this.sub=this.field.valueChange.subscribe(function(t){e.datepickerComponent.render(),e.datepickerComponent.selected.next({start:f(t)}),e.datepickerComponent.datePicker.setStartDate(f(t))})},e.prototype.clear=function(){this.request[this.field.id]=null,this.datepicker.nativeElement.value="",this.field.control.setValue("")},e.prototype.ngOnDestroy=function(){this.sub&&this.sub.unsubscribe()},e}();c.decorators=[{type:t.Component,args:[{selector:"tw-datetime-picker",template:"\n  <div [formGroup]='group' class=\"input-group\">\n  <input #datepicker class='form-control' type=\"text\" [formControlName]='field.id' name='{{field.id}}' id='{{field.id}}' daterangepicker [options]=\"options\" (selected)=\"selectedDate($event, daterange)\" (showDaterangepicker)=\"showDaterangepicker($event)\"  readonly/>\n  <span class=\"input-group-btn\">\n  <button class='btn btn-default' (click)='clear()'>&times;</button>\n  </span>\n  </div>"}]}],c.ctorParameters=function(){return[]},c.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}],datepicker:[{type:t.ViewChild,args:["datepicker"]}],datepickerComponent:[{type:t.ViewChild,args:[n.DaterangePickerComponent]}]};var m=function(){function e(){this.defaultValue="",this.closeOnSelect=!1}return e.prototype.ngOnInit=function(){this.field.more||(this.field.more={}),this.field.more.dateOnly=!0,this.field.more.dateFormat||(this.field.more.dateFormat="YYYY-MM-DD")},e.prototype.ngOnDestroy=function(){},e}();m.decorators=[{type:t.Component,args:[{selector:"tw-date-picker",template:"<tw-datetime-picker [group]='group' [field]='field'  [request]='request'></tw-datetime-picker>"}]}],m.ctorParameters=function(){return[]},m.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var h=r,g=function(){function e(e){this.differs=e,this.daterange={},this.minute="",this.firstShow=!0,this.differ=e.find({}).create()}return e.prototype.selectedDate=function(e,t){e.start&&e.end&&(this.field.more.dateOnly?(this.request[this.field.more.model1]=e.start.hours(12),this.request[this.field.more.model2]=e.end.hours(12)):(this.request[this.field.more.model1]=e.start,this.request[this.field.more.model2]=e.end),this.datepicker.nativeElement.value=e.start.format(this.field.more.dateFormat||"YYYY-MM-DD HH:mm")+" - "+e.end.format(this.field.more.dateFormat||"YYYY-MM-DD HH:mm")),this.field.control.setValue(this.datepicker.nativeElement.value)},e.prototype.showDaterangepicker=function(e){this.firstShow&&this.selectedDate({start:this.defaultValue1,end:this.defaultValue2}),this.firstShow=!1},e.prototype.ngOnInit=function(){if(this.datepicker.nativeElement=this.datepicker.nativeElement,this.field.more){if(this.field.more.defaultValue1)switch(this.field.more.defaultValue1){case"startOfDay":this.defaultValue1=h().startOf("day");break;case"endOfDay":this.defaultValue1=h().endOf("day");break;default:this.defaultValue1=this.field.more.defaultValue1}else this.defaultValue1=h();if(this.field.more.defaultValue2)switch(this.field.more.defaultValue2){case"startOfDay":this.defaultValue2=h().startOf("day");break;case"endOfDay":this.defaultValue2=h().endOf("day");break;default:this.defaultValue2=this.field.more.defaultValue2}else this.defaultValue2=h()}else this.field.more={};if(this.request[this.field.more.model1]){var e=h(this.request[this.field.more.model1]);this.defaultValue1=e}if(this.request[this.field.more.model2]){e=h(this.request[this.field.more.model2]);this.defaultValue2=e}if(this.request[this.field.more.model1]&&this.request[this.field.more.model2]&&this.field.control.setValue(this.defaultValue1.format(this.field.more.dateFormat||"YYYY-MM-DD HH:mm")+" - "+this.defaultValue2.format(this.field.more.dateFormat||"YYYY-MM-DD HH:mm")),this.options={timePicker:!this.field.more.dateOnly,timePicker24Hour:!0,autoUpdateInput:!1,autoApply:!0,startDate:this.defaultValue1,endDate:this.defaultValue2},this.field.more.options)for(var t in this.field.more.options)this.options[t]=this.field.more.options[t]},e.prototype.clear=function(){this.request[this.field.more.model1]=null,this.request[this.field.more.model2]=null,this.datepicker.nativeElement.value="",this.field.control.setValue("")},e.prototype.ngDoCheck=function(){var e=this,t=this.differ.diff(this.request);if(t){var i=null,n=null;t.forEachChangedItem(function(t){t.key===e.field.more.model1?i=t.currentValue:t.key===e.field.more.model2&&(n=t.currentValue)}),(i||n)&&(this.selectedDate({start:i||h(this.request[this.field.more.model1]),end:n||h(this.request[this.field.more.model2])}),this.firstShow=!1)}},e}();g.decorators=[{type:t.Component,args:[{selector:"tw-daterange-picker",template:"\n  <div [formGroup]='group' class=\"input-group\">\n  <input #datepicker class='form-control' type=\"text\" [formControlName]='field.id' name='{{field.id}}' daterangepicker [options]=\"options\" (selected)=\"selectedDate($event, daterange)\"  (showDaterangepicker)=\"showDaterangepicker($event)\" readonly/>\n  <span class=\"input-group-btn\">\n  <button class='btn btn-default' (click)='clear()'>&times;</button>\n  </span>\n  </div>"}]}],g.ctorParameters=function(){return[{type:t.KeyValueDiffers}]},g.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}],datepicker:[{type:t.ViewChild,args:["datepicker"]}]};var y=function(){return function(){}}();y.decorators=[{type:t.Component,args:[{selector:"tw-select",template:"\n  <div [formGroup]='group'>\n  <select [formControlName]='field.id' name='{{field.id}}' class='form-control' [(ngModel)]=\"request[field.id]\">\n      <option [ngValue]=\"field.firstValue.value \" *ngIf='field.firstValue' >{{field.firstValue.text | translate}}</option>\n      <option [ngValue]=\"option[field.optionValue] \" *ngFor=\"let option of field.options \">\n        {{option[field.optionText]}}\n      </option>\n    </select>\n</div>\n  "}]}],y.ctorParameters=function(){return[]},y.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var v=function(){return function(){}}();v.decorators=[{type:t.Component,args:[{selector:"tw-select-t",template:"\n  <div [formGroup]='group'>\n  <select [formControlName]='field.id' name='{{field.id}}' class='form-control' [(ngModel)]=\"request[field.id]\">\n      <option [ngValue]=\"field.firstValue.value\" *ngIf='field.firstValue' >{{field.firstValue.text | translate}}</option>\n      <option [ngValue]=\"option[field.optionValue]\" *ngFor=\"let option of field.options \">\n        {{option[field.optionText] | translate}}\n      </option>\n    </select>\n</div>\n  "}]}],v.ctorParameters=function(){return[]},v.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var w=function(){function e(){}return e.prototype.enumToArray=function(e){return Object.keys(e).slice(Object.keys(e).length/2)},e}();w.decorators=[{type:t.Component,args:[{selector:"tw-enumselect",template:"\n  <div [formGroup]='group'>\n  <select [attr.multiple]='field.type === \"enumselect\"?null:true' [formControlName]='field.id' name='{{field.id}}' class='form-control' [(ngModel)]=\"request[field.id]\">\n      <option [ngValue]=\"field.firstValue.value\" *ngIf='field.firstValue' >{{field.firstValue.text | translate}}</option>\n      <option [ngValue]=\"option\" *ngFor=\"let option of enumToArray(field.options)\">\n        {{option | translate}}\n      </option>\n    </select>\n</div>\n  "}]}],w.ctorParameters=function(){return[]},w.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var I=function(){function e(){}return e.prototype.clear=function(){this.request[this.field.id]=null},e}();I.decorators=[{type:t.Component,args:[{selector:"tw-input-text",template:"\n   <div [formGroup]='group' [ngClass]='field.more?.nullable ? \"input-group\" :\"\"'>\n  <input [formControlName]='field.id' name='{{field.id}}' type='{{field.type}}' class='form-control' [(ngModel)]=\"request[field.id]\"\n    [readonly]='field.more?.readonly' />\n          <span class=\"input-group-btn\" *ngIf='field.more?.nullable && field.type!==\"hidden\"'>\n        <button class='btn btn-default' (click)='clear()'>&times;</button>\n      </span>\n</div>\n   "}]}],I.ctorParameters=function(){return[]},I.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var C=function(){function e(){}return e.prototype.ngOnInit=function(){var e=this;this.field.addValidator(i.Validators.pattern(/^[+-]?([0-9]*[.])?[0-9]+$/)),this.sub=this.field.control.valueChanges.subscribe(function(t){e.request[e.field.id]=parseFloat(t)})},e.prototype.ngOnDestroy=function(){this.sub&&this.sub.unsubscribe()},e}();C.decorators=[{type:t.Component,args:[{selector:"tw-input-float",template:"\n  <div [formGroup]='group'>\n    <input [formControlName]='field.id' name='{{field.id}}' type='text' class='form-control' [readonly]='field.more?.readonly'  />\n  </div>"}]}],C.ctorParameters=function(){return[]},C.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var q=function(){function e(){this.defaultValue="",this.hours=[];for(var e=0;e<=23;e++)e<10?this.hours.push("0"+e.toString()):this.hours.push(e.toString());this.minutes=[];for(e=0;e<=59;e++)e<10?this.minutes.push("0"+e.toString()):this.minutes.push(e.toString())}return e.prototype.onChange=function(e){e&&!this.minute&&(this.minute="00"),this.hour&&this.minute?this.request[this.field.id]=this.hour+":"+this.minute:this.request[this.field.id]=null},e.prototype.ngOnChanges=function(e){var t=e.request.currentValue[this.field.id];if(t){var i=t.split(":");this.hour=i[0]?i[0]:"",this.minute=i[1]?i[1]:""}},e.prototype.ngOnInit=function(){this.field.more?this.field.more.defaultValue:this.field.more={}},e.prototype.clear=function(){this.hour="",this.minute="",this.request[this.field.id]=null},e}();q.decorators=[{type:t.Component,args:[{selector:"tw-time-picker",template:"\n  <div [formGroup]='group' style='display:none'>\n  <input type='hidden'  [formControlName]='field.id' [(ngModel)]=\"this.request[this.field.id]\" />\n  </div>\n  <div class='clear' >\n   <select [(ngModel)]=\"hour\" (ngModelChange)='onChange(true)' class='form-control pull-left' style='width:100px;'>\n        <option [ngValue]=\"\"></option>\n        <option *ngFor=\"let h of hours\" [ngValue]=\"h\">{{h}}</option>\n    </select>\n    <span class='pull-left' style='margin:5px'>hh</span>\n     <select [(ngModel)]=\"minute\" (ngModelChange)='onChange()'  class='form-control pull-left' style='width:100px;'>\n        <option [ngValue]=\"\"></option>\n        <option *ngFor=\"let m of minutes\" [ngValue]=\"m\">{{m}}</option>\n    </select>\n    <span class='pull-left' style='margin:5px'>mm</span>\n      <button class='btn btn-default pull-left'  (click)='clear()'>&times;</button>\n  </div>\n    "}]}],q.ctorParameters=function(){return[]},q.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var b=function(){return function(){}}();b.decorators=[{type:t.Component,args:[{selector:"tw-switch",template:'\n  <div [formGroup]=\'group\'>\n  <label class="switch switch-icon switch-pill switch-primary-outline-alt">\n        <input type="checkbox" [formControlName]=\'field.id\' class="switch-input"  [(ngModel)]="request[field.id]" >\n        <span class="switch-label" data-on="yes" data-off="no"></span>\n        <span class="switch-handle"></span>\n    </label>\n</div>\n  '}]}],b.ctorParameters=function(){return[]},b.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var V=function(){return function(){}}();V.decorators=[{type:t.Component,args:[{selector:"tw-groupselect",template:'\n  <div [formGroup]=\'group\'>\n  <select [formControlName]=\'field.id\' name=\'{{field.id}}\' class=\'form-control\' [(ngModel)]="request[field.id]" >\n        <option [ngValue]="field.firstValue.value " *ngIf=\'field.firstValue\' >{{field.firstValue.text | translate}}</option>\n        <optgroup label="{{group.label}}" *ngFor="let group of field.options">\n        <option [ngValue]="option[field.optionValue]" *ngFor="let option of group.values">\n          {{option[field.optionText]}}\n        </option>\n      </optgroup>\n    </select>\n</div>\n  '}]}],V.ctorParameters=function(){return[]},V.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var x=function(){function e(){}return e.prototype.ngOnInit=function(){this.field.more||(this.field.more={})},Object.defineProperty(e.prototype,"allSelected",{get:function(){return this.testSelected()},enumerable:!0,configurable:!0}),e.prototype.selectAll=function(){var e=this;this.testSelected()?this.request[this.field.id]=[]:(this.request[this.field.id]=[],this.field.options.forEach(function(t){e.request[e.field.id].push(t[e.field.optionValue])}))},e.prototype.testSelected=function(){return!(!this.request[this.field.id]||!this.field.options)&&(this.request[this.field.id].length===this.field.options.length||this.request[this.field.id].length===this.field.options.size)},e}();x.decorators=[{type:t.Component,args:[{selector:"tw-multiselect",template:"\n  <div [formGroup]='group'>\n   <button style='margin-top: -30px; margin-bottom: 5px;' [ngClass]=\"allSelected ? 'btn-primary' : 'btn-default'\" class='btn-sm btn pull-right' (click)='selectAll()' > {{field.more.allText || 'All'}}</button>\n<select multiple [formControlName]='field.id' name='{{field.id}}' class='form-control' [(ngModel)]=\"request[field.id]\">\n    <option [ngValue]=\"option[field.optionValue]\" *ngFor=\"let option of field.options\">\n      {{option[field.optionText]}}\n    </option>\n  </select>\n  </div>\n  "}]}],x.ctorParameters=function(){return[]},x.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var k=function(){function e(){}return e.prototype.ngOnInit=function(){this.field.more||(this.field.more={})},Object.defineProperty(e.prototype,"allSelected",{get:function(){return this.testSelected()},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){var e=this;return this.field.options?this.field.options.map(function(t){return t.id=t[e.field.optionValue],t.name=t[e.field.optionText],t}):[]},enumerable:!0,configurable:!0}),e.prototype.selectAll=function(){var e=this;this.testSelected()?this.request[this.field.id]=[]:(this.request[this.field.id]=[],this.field.options.forEach(function(t){e.request[e.field.id].push(t[e.field.optionValue])}))},e.prototype.testSelected=function(){return!(!this.request[this.field.id]||!this.field.options)&&(this.request[this.field.id].length===this.field.options.length||this.request[this.field.id].length===this.field.options.size)},e}();k.decorators=[{type:t.Component,args:[{selector:"tw-multiselectcb",template:"\n  <div [formGroup]='group'>\n    <button style='margin-top: -30px; margin-bottom: 5px;' [ngClass]=\"allSelected ? 'btn-primary' : 'btn-default'\" class='btn-sm btn pull-right' (click)='selectAll()' > {{field.more.allText || 'All'}}</button>\n    <ss-multiselect-dropdown [formControlName]='field.id' [options]=\"options\" [(ngModel)]=\"request[field.id]\" ></ss-multiselect-dropdown>\n  </div>\n  "}]}],k.ctorParameters=function(){return[]},k.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var D=function(){function e(){}return e.prototype.ngOnInit=function(){this.field.options=M},e}();D.decorators=[{type:t.Component,args:[{selector:"tw-dof",template:"<tw-enumselect [group]='group' [field]='field' [request]='request'></tw-enumselect>"}]}],D.ctorParameters=function(){return[]},D.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var M={Sunday:0,Monday:1,Tuesday:2,Wednesday:3,Thursday:4,Friday:5,Saturday:6};M[M.Sunday]="Sunday",M[M.Monday]="Monday",M[M.Tuesday]="Tuesday",M[M.Wednesday]="Wednesday",M[M.Thursday]="Thursday",M[M.Friday]="Friday",M[M.Saturday]="Saturday";var O=function(){return function(){}}();O.decorators=[{type:t.Component,args:[{selector:"tw-textarea",template:"\n  <div [formGroup]='group'>\n   <textarea [formControlName]='field.id' name='{{field.id}}' class='form-control' [(ngModel)]=\"request[field.id]\"></textarea>\n</div>\n  "}]}],O.ctorParameters=function(){return[]},O.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var P=function(){function e(){this.selectConfig=o.TreeviewConfig.create({hasAllCheckBox:!0,hasFilter:!0,hasCollapseExpand:!0,decoupleChildFromParent:!1,maxHeight:500})}return e.prototype.checkItem=function(e){var t,i,n=e.getSelection(),r=[];if(e.children){0===n.uncheckedItems.length&&r.push(e.value);try{for(var o=d(e.children),l=o.next();!l.done;l=o.next()){var s=l.value;r=r.concat(this.checkItem(s))}}catch(a){t={error:a}}finally{try{l&&!l.done&&(i=o["return"])&&i.call(o)}finally{if(t)throw t.error}}}return r},e.prototype.updateModel=function(e){if(this.treeviewComponent)try{for(var t=d(this.treeviewComponent.items),i=t.next();!i.done;i=t.next()){var n=i.value;e=e.concat(this.checkItem(n))}}catch(l){r={error:l}}finally{try{i&&!i.done&&(o=t["return"])&&o.call(t)}finally{if(r)throw r.error}}var r,o;e?this.field.setValue(e):this.field.setValue([])},e.prototype.ngOnInit=function(){this.field.more&&this.field.more.selectConfig&&(this.selectConfig=this.field.more.selectConfig)},e}();P.decorators=[{type:t.Component,args:[{selector:"tw-treeview",template:'\n  <div [formGroup]=\'group\'>\n   <ngx-treeview *ngIf=\'field.type==="treeview"\' [config]="selectConfig" [items]="field.options" (selectedChange)="updateModel($event)"></ngx-treeview>\n   <ngx-dropdown-treeview *ngIf=\'field.type==="dropdown-treeview"\'  [config]="selectConfig" [items]="field.options" (selectedChange)="updateModel($event)"></ngx-dropdown-treeview>\n  <input [formControlName]=\'field.id\' name=\'{{field.id}}\' type=\'hidden\' class=\'form-control\' [(ngModel)]="request[field.id]"/>\n</div>\n  '}]}],P.ctorParameters=function(){return[]},P.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}],treeviewComponent:[{type:t.ViewChild,args:[o.TreeviewComponent]}]};var F=function(){function e(){this.selectConfig=o.TreeviewConfig.create({hasAllCheckBox:!0,hasFilter:!0,hasCollapseExpand:!0,decoupleChildFromParent:!1,maxHeight:500})}return e.prototype.checkItem=function(e){var t,i,n=e.getSelection(),r=[];if(e.children){0===n.uncheckedItems.length&&r.push(e.value);try{for(var o=d(e.children),l=o.next();!l.done;l=o.next()){var s=l.value;r=r.concat(this.checkItem(s))}}catch(a){t={error:a}}finally{try{l&&!l.done&&(i=o["return"])&&i.call(o)}finally{if(t)throw t.error}}}return r},e.prototype.updateModel=function(e){if(this.treeviewComponent)try{for(var t=d(this.treeviewComponent.items),i=t.next();!i.done;i=t.next()){var n=i.value;e=e.concat(this.checkItem(n))}}catch(l){r={error:l}}finally{try{i&&!i.done&&(o=t["return"])&&o.call(t)}finally{if(r)throw r.error}}var r,o;e?this.field.setValue(e.join(",")):this.field.setValue("")},e.prototype.ngOnInit=function(){this.field.more&&this.field.more.selectConfig&&(this.selectConfig=this.field.more.selectConfig)},e}();F.decorators=[{type:t.Component,args:[{selector:"tw-treeview-txt",template:'\n  <div [formGroup]=\'group\'>\n   <ngx-treeview #treeview *ngIf=\'field.type==="treeview-txt"\' id="treeview_{{field.id}}" [config]="selectConfig" [items]="field.options" (selectedChange)="updateModel($event)"></ngx-treeview>\n   <ngx-dropdown-treeview *ngIf=\'field.type==="dropdown-treeview-txt"\' id="treeview_{{field.id}}" [config]="selectConfig" [items]="field.options" (selectedChange)="updateModel($event)"></ngx-dropdown-treeview>\n    <input [formControlName]=\'field.id\' name=\'{{field.id}}\' type=\'hidden\' class=\'form-control\' [(ngModel)]="request[field.id]"/>\n</div>\n  '}]}],F.ctorParameters=function(){return[]},F.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}],treeviewComponent:[{type:t.ViewChild,args:[o.TreeviewComponent]}]};var S=function(){function e(){this.selectConfig=o.TreeviewConfig.create({hasAllCheckBox:!0,hasFilter:!0,hasCollapseExpand:!0,decoupleChildFromParent:!1,maxHeight:500})}return e.prototype.toggleCollapseExpand=function(){var e=this;this.allItem.collapsed=!this.allItem.collapsed,this.field.options.items&&this.field.options.items.forEach(function(t){return t.setCollapsedRecursive(e.allItem.collapsed)})},e.prototype.updateModel=function(e){e?this.field.setValue(e.join(",")):this.field.setValue("")},e.prototype.ngOnInit=function(){this.field.more&&this.field.more.selectConfig&&(this.selectConfig=this.field.more.selectConfig)},e}();S.decorators=[{type:t.Component,args:[{selector:"tw-treeview-radio",template:'\n<ng-template #tpl let-item="item"\n    let-toggleCollapseExpand="toggleCollapseExpand"\n    let-onCheckedChange="onCheckedChange">\n    <div class="form-check" [formGroup]=\'group\'>\n        <i *ngIf="item.children" (click)="toggleCollapseExpand()" aria-hidden="true"\n            class="fa" [class.fa-caret-right]="item.collapsed" [class.fa-caret-down]="!item.collapsed"></i>\n        <label class="form-check-label">\n            <input type="radio"  class="form-check-input" [(ngModel)]="request[field.id]" [formControlName]=\'field.id\'  name=\'{{field.id}}\' [value]=\'item.value\' />\n            {{item.text}}\n        </label>\n    </div>\n</ng-template>\n<div class="treeview-header">\n</div>\n<div class="treeview-container" [style.max-height.px]="selectConfig.maxHeight" >\n    <div *ngFor="let item of field.options">\n        <tw-treeview-item [item]="item" [template]="template || tpl" >\n        </tw-treeview-item>\n    </div>\n</div>\n',styles:["\n.row-margin {\n    margin-top: .3rem;\n}\n.label-item-all {\n}\n.label-collapse-expand {\n    margin: 0;\n    padding: 0 .3rem;\n    cursor: pointer;\n}\n.divider {\n    height: 1px;\n    margin: 0.5rem 0;\n    overflow: hidden;\n    background: #000;\n}\n.treeview-container {\n    overflow-x: hidden;\n    overflow-y: auto;\n    padding-right: 18px;\n}\n.treeview-text {\n    padding: .3rem 0;\n    white-space: nowrap;\n}\n"]}]}],S.ctorParameters=function(){return[]},S.propDecorators={group:[{type:t.Input}],field:[{type:t.Input}],request:[{type:t.Input}]};var E=function(){return function(){var e=this;this.toggleCollapseExpand=function(){e.item.collapsed=!e.item.collapsed}}}();E.decorators=[{type:t.Component,args:[{selector:"tw-treeview-item",template:'\n<div class="treeview-item">\n    <ng-template [ngTemplateOutlet]="template"\n        [ngTemplateOutletContext]="{item: item, toggleCollapseExpand: toggleCollapseExpand}">\n    </ng-template>\n    <div *ngIf="!item.collapsed">\n        <tw-treeview-item *ngFor="let child of item.children" [item]="child" [template]="template">\n        </tw-treeview-item>\n    </div>\n</div>\n    ',styles:["\n:host {\n    display: block;\n}\n:host /deep/ .fa {\n    margin-right: .2rem;\n    width: .5rem;\n    cursor: pointer;\n}\n.treeview-item {\n    white-space: nowrap;\n}\n.treeview-item .treeview-item {\n    margin-left: 2rem;\n}\n    "]}]}],E.ctorParameters=function(){return[]},E.propDecorators={template:[{type:t.Input}],item:[{type:t.Input}]};var Y=function(){function e(){this.global=!1}return e.prototype.start=function(){this.global=!0},e.prototype.stop=function(){this.global=!1},e}();Y.decorators=[{type:t.Injectable}],Y.ctorParameters=function(){return[]};var T=function(){function e(e){this.busy=e,this.onClick=new t.EventEmitter(!0)}return e.prototype.send=function(){this.onClick.next(!0)},e}();T.decorators=[{type:t.Component,args:[{selector:"tw-busy-button",template:"<button (click)='send()' [class]=\"cssClass\" [disabled]=\"disabled || busy.global\"><span style='margin- right:5px'  *ngIf='busy.global'><img src=\"assets/img/ajax-loader.gif\"/></span><i class='fa fa-{{icon }}' style='margin- right:5px'  *ngIf='icon && !busy.global'></i><ng-content></ng-content></button>"}]}],T.ctorParameters=function(){return[{type:Y}]},T.propDecorators={cssClass:[{type:t.Input}],disabled:[{type:t.Input}],icon:[{type:t.Input}],onClick:[{type:t.Output}]};var H=function(){return function(e){this.daterangepickerConfig=e}}();H.decorators=[{type:t.Injectable}],H.ctorParameters=function(){return[{type:n.DaterangepickerConfig}]};var G=[u,c,k,y,w,I,C,q,b,V,m,D,x,O,T,P,F,S,E,v,g],N=function(){function e(){}return e.forRoot=function(){return{ngModule:e,providers:[Y]}},e}();N.decorators=[{type:t.NgModule,args:[{imports:[i.ReactiveFormsModule,l.CommonModule,s.TranslateModule,a.MultiselectDropdownModule,i.FormsModule,o.TreeviewModule,n.Daterangepicker],declarations:G,exports:G,providers:[H]}]}],N.ctorParameters=function(){return[]},e.BusyService=Y,e.AngularFormsUtilsConfigs=H,e.AngularFormsUtilsModule=N,e.FormField=p,e.ɵo=T,e.ɵk=m,e.ɵu=g,e.ɵb=c,e.ɵl=D,e.ɵe=w,e.ɵj=V,e.ɵg=C,e.ɵf=I,e.ɵm=x,e.ɵc=k,e.ɵa=u,e.ɵt=v,e.ɵd=y,e.ɵi=b,e.ɵn=O,e.ɵh=q,e.ɵs=E,e.ɵr=S,e.ɵq=F,e.ɵp=P,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-forms-utils.umd.min.js.map
